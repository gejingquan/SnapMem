From 7be0a2bed6c1843a0b83a4c21b9ca3c7bb2ec044 Mon Sep 17 00:00:00 2001
From: gerty1986823 <gerty1986823@126.com>
Date: Fri, 21 Jan 2022 15:15:24 +0800
Subject: [PATCH] gejingquan01

Signed-off-by: gerty1986823 <gerty1986823@126.com>
---
 Makefile                       |  2 +-
 arch/arm64/kernel/cpufeature.c |  2 +-
 kernel/exit.c                  | 30 ++++++++++++++++++++++++++++++
 kernel/fork.c                  | 28 ++++++++++++++++++++++++++++
 kernel/smp.c                   | 16 ++++++++++++++++
 5 files changed, 76 insertions(+), 2 deletions(-)

diff --git a/Makefile b/Makefile
index d4d36c6..bace40c 100644
--- a/Makefile
+++ b/Makefile
@@ -2,7 +2,7 @@
 VERSION = 5
 PATCHLEVEL = 4
 SUBLEVEL = 0
-EXTRAVERSION =
+EXTRAVERSION = KPTIen2_SnapMem
 NAME = Kleptomaniac Octopus
 
 # *DOCUMENTATION*
diff --git a/arch/arm64/kernel/cpufeature.c b/arch/arm64/kernel/cpufeature.c
index 80f459a..6c72f99 100644
--- a/arch/arm64/kernel/cpufeature.c
+++ b/arch/arm64/kernel/cpufeature.c
@@ -976,7 +976,7 @@ static bool unmap_kernel_at_el0(const struct arm64_cpu_capabilities *entry,
 		MIDR_ALL_VERSIONS(MIDR_CAVIUM_THUNDERX2),
 		MIDR_ALL_VERSIONS(MIDR_BRCM_VULCAN),
 		MIDR_ALL_VERSIONS(MIDR_CORTEX_A35),
-		MIDR_ALL_VERSIONS(MIDR_CORTEX_A53),
+		//MIDR_ALL_VERSIONS(MIDR_CORTEX_A53),
 		MIDR_ALL_VERSIONS(MIDR_CORTEX_A55),
 		MIDR_ALL_VERSIONS(MIDR_CORTEX_A57),
 		MIDR_ALL_VERSIONS(MIDR_CORTEX_A72),
diff --git a/kernel/exit.c b/kernel/exit.c
index a46a50d..935c518 100644
--- a/kernel/exit.c
+++ b/kernel/exit.c
@@ -69,6 +69,19 @@
 #include <asm/pgtable.h>
 #include <asm/mmu_context.h>
 
+
+
+
+extern unsigned long snapmem_pid[5];
+
+extern unsigned long snapmem[5][1024];
+
+
+extern unsigned long snapmem_enable;
+
+
+
+
 static void __unhash_process(struct task_struct *p, bool group_dead)
 {
 	nr_threads--;
@@ -437,6 +450,23 @@ static void exit_mm(void)
 	struct mm_struct *mm = current->mm;
 	struct core_state *core_state;
 
+
+
+   //-------------------free SnapMem--------------------------
+	if(snapmem_enable==0xdeadbeef){
+		//printk("Check and free SnapMem!");
+		int i;
+		for(i=0;i<5;i++){
+			if(snapmem_pid[i]==current->pid){
+				snapmem_pid[i]=0;
+				break;
+			}
+		}
+	}
+   //---------------------------------------------------------
+
+
+
 	mm_release(current, mm);
 	if (!mm)
 		return;
diff --git a/kernel/fork.c b/kernel/fork.c
index 13b3879..ca91a32 100644
--- a/kernel/fork.c
+++ b/kernel/fork.c
@@ -127,6 +127,14 @@ static int max_threads;		/* tunable limit on nr_threads */
 
 #define NAMED_ARRAY_INDEX(x)	[x] = __stringify(x)
 
+
+extern unsigned long snapmem_pid[5];
+
+extern unsigned long snapmem[5][1024];
+
+extern unsigned long snapmem_enable;
+
+
 static const char * const resident_page_types[] = {
 	NAMED_ARRAY_INDEX(MM_FILEPAGES),
 	NAMED_ARRAY_INDEX(MM_ANONPAGES),
@@ -1385,6 +1393,26 @@ static int copy_mm(unsigned long clone_flags, struct task_struct *tsk)
 	struct mm_struct *mm, *oldmm;
 	int retval;
 
+
+
+   //-------------------free SnapMem--------------------------
+   if(snapmem_enable==0xdeadbeef){
+		//printk("Check and free SnapMem!");
+		int i;
+		for(i=0;i<5;i++){
+			if(snapmem_pid[i]==current->pid){
+				snapmem_pid[i]=0;
+				break;
+			}
+		}
+    }
+   //---------------------------------------------------------
+
+
+
+
+
+
 	tsk->min_flt = tsk->maj_flt = 0;
 	tsk->nvcsw = tsk->nivcsw = 0;
 #ifdef CONFIG_DETECT_HUNG_TASK
diff --git a/kernel/smp.c b/kernel/smp.c
index 7dbcb40..52292cb 100644
--- a/kernel/smp.c
+++ b/kernel/smp.c
@@ -603,6 +603,22 @@ void __init smp_init(void)
 	smp_cpus_done(setup_max_cpus);
 }
 
+unsigned long snapmem[5][1024];
+
+EXPORT_SYMBOL(snapmem);
+
+
+unsigned long snapmem_pid[5];
+
+EXPORT_SYMBOL(snapmem_pid);
+
+
+unsigned long snapmem_enable;
+
+EXPORT_SYMBOL(snapmem_enable);
+
+
+
 /*
  * Call a function on all processors.  May be used during early boot while
  * early_boot_irqs_disabled is set.  Use local_irq_save/restore() instead
-- 
2.7.4

